@using Umbraco.Cms.Web.Common.PublishedModels;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.LoginPage>

@{
    Layout = "Main.cshtml";

    var logo = Model.Logo as IPublishedContent;
    var logoUrl = logo != null ? logo.Url() : null;
    var registrationLink = Model.RegistrationPage?.FirstOrDefault()?.Url;
    var recoveryLink = Model.RecoveryUrl?.Url ?? "/";
}

<head>
    <link rel="stylesheet" href="~/Styles/LoginPage.css" />
    <script>
        async function handleLogin(event) {
            event.preventDefault(); // Prevent the form from being submitted by default

            const email = document.getElementById("email").value;
            const password = document.getElementById("password").value;

            try {
                // Perform the POST request to the login API using query parameters
                const response = await fetch(`https://ddeycapi.duckdns.org/api/Auth/login?email=${encodeURIComponent(email)}&password=${encodeURIComponent(password)}`, {
                    method: 'POST',
                    headers: {
                        'accept': '*/*'
                    }
                });

                // Check the response status
                if (response.ok) {
                    const data = await response.json();
                    console.log("Server response:", data); // Print the server response to the console

                    // Cambiar 'data.token' a 'data.userToken'
                    if (data && data.userToken) { // Asegúrate de que la propiedad userToken sea correcta
                        const token = data.userToken; // Cambia según la estructura de la respuesta
                        localStorage.setItem('authToken', token); // Puedes usar sessionStorage si lo prefieres

                        // Redirigir a Google
                        window.location.href = 'https://www.google.com';
                    } else {
                        // Mostrar un mensaje de error si no se encuentra el token
                        document.getElementById("loginError").innerText = "Error in server response. Token not found.";
                    }
                } else {
                    // Handle errors for unsuccessful responses
                    const errorData = await response.json();
                    console.error("Authentication error:", errorData);
                    document.getElementById("loginError").innerText = "Error logging in. Please check your credentials.";
                }
            } catch (error) {
                console.error("Error attempting to log in:", error);
                document.getElementById("loginError").innerText = "An error occurred while trying to log in.";
            }
        }
    </script>
</head>

<div class="login-header">
    <h1 class="login-h1">@Model.Title</h1>
    <h2 class="login-h2">@Model.Subtitle</h2>
</div>

<div class="login-container text-center">
    <form id="loginForm" onsubmit="handleLogin(event)">
        <div class="login-form-group">
            <input type="email" id="email" name="email" placeholder="Correo electrónico" required />
        </div>

        <div class="login-form-group">
            <input type="password" id="password" name="password" placeholder="Contraseña" required />
        </div>

        <div class="login-form-group">
            @if (!string.IsNullOrEmpty(recoveryLink))
            {
                <a href="@recoveryLink" class="login-forgot-password-link">¿Olvidaste tu contraseña?</a>
            }
            else
            {
                <p>No se ha configurado una página de recuperación.</p>
            }
        </div>

        <div class="login-action-buttons">
            <button type="submit" class="login-button">Iniciar Sesión</button>

            @if (registrationLink != null)
            {
                <a href="@registrationLink" class="login-register-button">Crear Usuario</a>
            }
            else
            {
                <p>No se ha configurado una página de registro.</p>
            }
        </div>
    </form>

    <div id="loginError" class="login-error-message"></div>

    @if (logoUrl != null)
    {
        <img src="@logoUrl" alt="Logotipo Gobierno Municipal de Chihuahua" class="login-logo" />
    }
    else
    {
        <p>No se ha configurado un logotipo.</p>
    }
</div>
