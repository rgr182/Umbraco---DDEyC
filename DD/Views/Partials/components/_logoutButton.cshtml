@using Umbraco.Cms.Web.Common.PublishedModels;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

@{
    var authApiLogout = Configuration["ApiSettings:AuthApiLogout"];
    var authApiCheckSession = Configuration["ApiSettings:AuthApiCheckSession"];
}
<head>
   
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link href="~/Styles/logoutButton.css" rel="stylesheet" />
</head>

<body>
    <div class="baseButton">
        <button class="logoutButton btn btn-primary btn-lg p-1" onclick="logout()">
            <i class="bi bi-power fs-2 fw-bold"></i>
        </button>
    </div>
  
    <script>
        const authToken = JSON.parse(localStorage.getItem('authToken'));
        // function to verify expirationDate
        function TokenExpirationDate() {
            if (authToken && authToken.expiration) {
                const tiempoActual = new Date().getTime();
                const expirationTime = new Date(authToken.expiration).getTime();
                if (tiempoActual > expirationTime) {
                    logout();
                }
            }
        }
        setInterval(TokenExpirationDate, 15 * 60 * 1000);
        TokenExpirationDate();

        // function to logout and remove authToken
        async function logout() {
            if (!authToken || !authToken.token) {
                return;
            }
            const response = await fetch('@authApiLogout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken.token}`
                }
            });
            if (response.ok) {
                localStorage.removeItem('authToken');
                window.location.href = '/loginpage/';
            }
        }
    </script>
</body>
