@using Umbraco.Cms.Web.Common.PublishedModels;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

@{
    var authApiLogout = Configuration["ApiSettings:AuthApiLogout"];
    var authApiCheckSession = Configuration["ApiSettings:AuthApiCheckSession"];
}
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link href="~/Styles/logoutButton.css" rel="stylesheet" />
</head>

<body>
    <div>
        <button class="logoutButton btn btn-primary btn-lg p-1" onclick="logout()">
            <i class="bi bi-power fs-2 fw-bold"></i>
        </button>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const CHECK_INTERVAL = 1 * 60 * 1000;
        let checkSessionIntervalId;
        async function checkSessionStatus() {
            console.log("Verificando estado de la sesión...");
            const authToken = localStorage.getItem('authToken');
            if (!authToken) {
                // No hay token, la sesión ya está cerrada o no ha iniciado
                return;
            }
            try {
                const response = await fetch('@authApiCheckSession', {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${authToken}`
                    }
                });
                const data = await response.json();
                if (data.IsSessionValid) {
                    console.log("Sesión activa.");
                } else {
                    // Sesión no es válida
                    alert("Tu sesión ha expirado.");
                    localStorage.removeItem('authToken');
                    clearInterval(checkSessionIntervalId);
                    window.location.href = "/loginpage";
                }
            } catch (error) {
                console.error("Error verificando la sesión:", error);
                alert("Ocurrió un error verificando la sesión. Inténtalo más tarde.");
            }
        }
        function startSessionCheck() {
            const authToken = localStorage.getItem('authToken');
            if (!authToken) {
                // Si no hay token no iniciamos la verificación
                console.log("No hay sesión activa, no se inicia la verificación.");
                return;
            }
            // Inicia la verificación de la sesión
            checkSessionIntervalId = setInterval(checkSessionStatus, CHECK_INTERVAL);
            checkSessionStatus();
        }
        startSessionCheck();

        // function to logout and remove authToken
        async function logout() {
            const authToken = localStorage.getItem('authToken');
            if (!authToken) {
                alert("No hay una sesión activa.");
                return;
            }
            try {
                const response = await fetch('@authApiLogout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${authToken}`
                    }
                });

                if (response.ok) {
                    localStorage.removeItem('authToken');
                    alert("Sesión cerrada exitosamente.");
                    window.location.href = '/loginpage/';
                } else {
                    alert("No se pudo cerrar la sesión. Intenta de nuevo.");
                }
            } catch (error) {
                console.error('Error durante el cierre de sesión:', error);
                alert("Ocurrió un error. Inténtalo más tarde.");
            }
        }
    </script>
</body>
