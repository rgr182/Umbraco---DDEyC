@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core.Models.PublishedContent
@{
    Layout = null;
    var rootNode = Umbraco.ContentAtRoot().FirstOrDefault();
    
    IEnumerable<IPublishedContent> GetVisibleChildren(IPublishedContent node)
    {
        return node.Children().Where(x => x.IsVisible());
    }
    
    IEnumerable<IPublishedContent> GetVisibleChildrenOfPagesWithVisibleChildren(IPublishedContent node)
    {
        var childrenOfPagesWithVisibleChildren = new List<IPublishedContent>();
        foreach (var child in GetVisibleChildren(node))
        {
            var visibleChildren = GetVisibleChildren(child);
            if (visibleChildren.Any())
            {
                childrenOfPagesWithVisibleChildren.AddRange(visibleChildren);
            }
        }
        return childrenOfPagesWithVisibleChildren;
    }
    
    var visibleChildrenOfPagesWithVisibleChildren = GetVisibleChildrenOfPagesWithVisibleChildren(rootNode);
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="~/Styles/navigation.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
</head>
<body>
    <div class="navigation-container">
        <nav id="navigation" aria-label="Main navigation">
            <div class="mobileMenu">
                <a href="@rootNode.Url()" aria-label="Home">
                    <i class="homeButton fa-solid fa-house"></i>
                </a>
                <button id="open-menu" aria-label="Toggle menu" aria-expanded="false">
                    <i id="bars" class="fas fa-bars"></i>
                </button>
            </div>
            <ul class="main-menu">
                <li>
                    <a href="@rootNode.Url()" aria-label="Home">
                        <i class="hideHome fa-solid fa-house"></i>
                    </a>
                </li>
                @if (visibleChildrenOfPagesWithVisibleChildren != null && visibleChildrenOfPagesWithVisibleChildren.Any())
                {
                    foreach (var item in visibleChildrenOfPagesWithVisibleChildren)
                    {
                        var hasChildLinks = item.Children().Any(x => x.IsVisible());
                        if (hasChildLinks)
                        {
                            <li class="has-dropdown">
                                <div class="menu-item-header">
                                    <a class="parent-link" href="@item.Url()" aria-haspopup="true" aria-expanded="false">@item.Name</a>
                                    <button class="dropdown-arrow" aria-label="Toggle @item.Name submenu">
                                        <i class="fas fa-chevron-down"></i>
                                    </button>
                                </div>
                                <ul class="dropdown">
                                    @foreach (var childLink in item.Children().Where(x => x.IsVisible()))
                                    {
                                        var visibleGrandChildren = childLink.Children().Where(x => x.IsVisible());
                                        <li class="has-subdropdown">
                                            <div class="menu-item-header">
                                                <a class="child-link" href="@childLink.Url()" 
                                                   aria-haspopup="@(visibleGrandChildren.Any() ? "true" : "false")"
                                                   aria-expanded="false">@childLink.Name</a>
                                                @if (visibleGrandChildren.Any())
                                                {
                                                    <button class="dropdown-arrow" aria-label="Toggle @childLink.Name submenu">
                                                        <i class="fas fa-chevron-down"></i>
                                                    </button>
                                                }
                                            </div>
                                            @if (visibleGrandChildren.Any())
                                            {
                                                <ul class="sub-dropdown" data-is-submenu="true">
                                                    @foreach (var grandChildLink in visibleGrandChildren)
                                                    {
                                                        <li>
                                                            <a href="@grandChildLink.Url()">@grandChildLink.Name</a>
                                                        </li>
                                                    }
                                                </ul>
                                            }
                                        </li>
                                    }
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li>
                                <div class="menu-item-header">
                                    <a href="@item.Url()">@item.Name</a>
                                </div>
                            </li>
                        }
                    }
                }
            </ul>
        </nav>
    </div>
    <script src="~/Scripts/mobileMenuToggle.js"></script>
</body>
</html>