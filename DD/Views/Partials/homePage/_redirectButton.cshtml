@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IHomeRedirectButtonProperties>
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment HostingEnvironment

@{
    const string defaultColor = "#0077b6";
    const string defaultTextColor = "#ffffff";

    var buttonColor = Model.HomeRedirectButtonColor ?? defaultColor;
    var buttonTextColor = Model.HomeRedirectButtonTextColor ?? defaultTextColor;

    var apiBaseUrl = Configuration["ApiSettings:AuthApiUrl"]?.TrimEnd('/');
    var validateSessionUrl = $"{apiBaseUrl}/api/auth/validateSession";
    var loginPageRoute = Configuration["AppSettings:LoginPageRoute"] ?? "/loginpage";
}

@if (!Model.HideHomeRedirectButton)
{
    <div class="button-container">
        <a id="homeRedirectButton" 
           href="javascript:void(0)" 
           class="btn btn-primary btn-lg home-redirect-button fixed-size-button"
           style="background-color: @buttonColor; color: @buttonTextColor;">
            <span class="loading-spinner"></span>
            <span class="button-text">@Model.HomeRedirectButtonText</span>
        </a>
    </div>
}

<script src="~/Scripts/redirectButton.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const config = {
            validateEndpoint: '@Html.Raw(validateSessionUrl)',
            loginUrl: '@loginPageRoute',
            redirectUrl: '@Model.HomeRedirectButtonUrl?.Url',
            isProd: '@(HostingEnvironment.EnvironmentName.ToString().ToLower()=="production")' === 'true',
            preferCookies: document.cookie.includes('prefer-cookies') || 
                          '@(HostingEnvironment.EnvironmentName.ToString().ToLower()=="production")' === 'true'
        };
        
        new RedirectButtonHandler(config);
    });
</script>