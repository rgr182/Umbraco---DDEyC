@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.Blocks;

@{
    var blocks = Model.Value<IEnumerable<BlockListItem>>("footerItems");
    var blocksList = blocks.ToList();
    var defaultImageUrl = Url.Content("~/assets/default.webp");
}

<head>
    <link href="~/Styles/FooterCarousel.css" rel="stylesheet" />
</head>

<div id="footerCarousel" class="carousel slide" data-bs-ride="carousel">
    <ol class="carousel-indicators">
        <!-- Carousel indicators will be rendered here -->
    </ol>

    <div class="carousel-inner">
        <!-- Carousel content will be rendered here -->
    </div>

    <button class="carousel-control-prev" type="button" data-bs-target="#footerCarousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>

    <button class="carousel-control-next" type="button" data-bs-target="#footerCarousel" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>

<script>
    function handleResizeFooter() {
        const currentWindowWidth = window.innerWidth;
        const isMobile = currentWindowWidth <= 767;
        const wasMobile = prevWidth <= 767;

        if (isMobile !== wasMobile) {
            renderFooterLayout();
        }

        prevWidth = currentWindowWidth;
    }

    function renderFooterLayout() {
        const isMobile = window.innerWidth <= 767;
        const carouselInner = document.querySelector('#footerCarousel .carousel-inner');
        const carouselIndicators = document.querySelector('#footerCarousel .carousel-indicators');
        carouselIndicators.innerHTML = '';
        carouselInner.innerHTML = '';

        if (isMobile) {
    @{
        int index = 0;
    }
    @foreach (var block in blocksList)
    {
        var content = (ContentModels.FooterItems)block.Content;
        var imageUrl = string.IsNullOrWhiteSpace(content.FooterItemImage?.Url()) ? defaultImageUrl : content.FooterItemImage?.Url();
        var isActive = index == 0 ? "active" : "";
        <text>
                        carouselInner.insertAdjacentHTML('beforeend', `
                        <div class="carousel-item @(isActive)">
                            <div class="carousel-item-content">
                                <div class="row">
                                    <div class="col-12"> <!-- Adjust column size for mobile -->
                                        <div class="d-flex align-items-center">
                                            <div class="carousel-image-container">
                                                <a href="@content.FooterItemUrl?.Url">
                                                    <img src="@imageUrl" class="d-block w-100 object-fit-cover" alt="..." style="max-width: 200px;"> <!-- Adjust max-width for smaller images -->
                                                </a>
                                            </div>

                                            <div class="carousel-text">
                                                <p class="carousel-text-ellipsis" style="font-size: 14px;">@content.FooterItemText1</p> <!-- Adjust font size -->
                                                <p class="carousel-text-ellipsis" style="font-size: 14px;">@content.FooterItemText2</p> <!-- Adjust font size -->
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        `);
                        carouselIndicators.insertAdjacentHTML('beforeend', `
                        <li data-bs-target="#footerCarousel" data-bs-slide-to="@index" class="@isActive"></li>`);
        </text>
        index++;
    }
        } else {
            // Render desktop layout
    @for (int i = 0; i < blocksList.Count; i += 3)
    {
        var isFirst = i == 0;
        <text>
                        carouselInner.insertAdjacentHTML('beforeend', `
                        <div class="carousel-item @(isFirst ? "active" : "")">
                            <div class="carousel-item-content">
                                <div class="row">
                        @for (int j = 0; j < 3 && i + j < blocksList.Count; j++)
                        {
                            var block = blocksList[i + j];
                            var content = (ContentModels.FooterItems)block.Content;
                            var imageUrl = string.IsNullOrWhiteSpace(content.FooterItemImage?.Url()) ? defaultImageUrl : content.FooterItemImage?.Url();
                                        <div class="col-md-4"> <!-- Adjust column size for desktop -->
                                            <div class="d-flex align-items-center">
                                                <div class="carousel-image-container">
                                                    <a href="@content.FooterItemUrl?.Url">
                                                        <img src="@imageUrl" class="d-block w-100 object-fit-cover" alt="..." style="max-width: 200px;"> <!-- Adjust max-width for smaller images -->
                                                    </a>
                                                </div>

                                                <div class="carousel-text">
                                                    <p class="carousel-text-ellipsis" style="font-size: 14px;">@content.FooterItemText1</p> <!-- Adjust font size -->
                                                    <p class="carousel-text-ellipsis" style="font-size: 14px;">@content.FooterItemText2</p> <!-- Adjust font size -->
                                                </div>
                                            </div>
                                        </div>
                        }
                                </div>
                            </div>
                        </div>
                        `);
                        carouselIndicators.insertAdjacentHTML('beforeend', `
                        <li data-bs-target="#footerCarousel" data-bs-slide-to="@(i / 3)" class="@(i==0 ? "active" : "")"></li>`);
        </text>
    }
        }
    }

    let prevWidth = window.innerWidth;

    window.addEventListener('load', renderFooterLayout);
    window.addEventListener('resize', handleResizeFooter);
    window.addEventListener('DOMContentLoaded', renderFooterLayout); // Call initially to set the correct layout
</script>
